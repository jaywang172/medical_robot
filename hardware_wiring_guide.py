#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
硬件接線指南生成器
為您的機器人項目生成詳細的接線圖和檢查清單
"""

def generate_wiring_diagram():
    """生成接線圖"""
    
    diagram = """
🔌 樹莓派4B 完整接線圖
========================

                    樹莓派 4B GPIO 針腳
                    
    3V3  (1) ● ● (2)  5V     ← 電源針腳
  GPIO2  (3) ● ● (4)  5V     ← I2C SDA + 電源
  GPIO3  (5) ● ● (6)  GND    ← I2C SCL + 接地
  GPIO4  (7) ● ● (8)  GPIO14 
    GND  (9) ● ● (10) GPIO15 
 GPIO17 (11) ● ● (12) GPIO18 ← 電機控制
 GPIO27 (13) ● ● (14) GND    
 GPIO22 (15) ● ● (16) GPIO23 ← 超聲波控制
    3V3 (17) ● ● (18) GPIO24 
 GPIO10 (19) ● ● (20) GND    
  GPIO9 (21) ● ● (22) GPIO25 
 GPIO11 (23) ● ● (24) GPIO8  
    GND (25) ● ● (26) GPIO7  
  GPIO0 (27) ● ● (28) GPIO1  
  GPIO5 (29) ● ● (30) GND    
  GPIO6 (31) ● ● (32) GPIO12 
 GPIO13 (33) ● ● (34) GND    ← 電機控制 + 接地
 GPIO19 (35) ● ● (36) GPIO16 ← 電機控制
 GPIO26 (37) ● ● (38) GPIO20 
    GND (39) ● ● (40) GPIO21 

🚗 電機控制連接 (根據 car_run_turn.py)
=====================================

樹莓派 → L298N 電機驅動板：
--------------------------
GPIO 16 (針腳36) → IN1 (右電機正轉)
GPIO 18 (針腳12) → IN2 (右電機反轉)  
GPIO 11 (針腳23) → IN3 (左電機正轉)
GPIO 13 (針腳33) → IN4 (左電機反轉)
5V   (針腳2或4)  → VCC (邏輯電源)
GND  (任何GND)   → GND (公共接地)

L298N → 電機：
------------
OUT1, OUT2 → 右側電機 (紅黑線)
OUT3, OUT4 → 左側電機 (紅黑線)

L298N → 電池：
------------
VIN → 12V 電池正極 (紅線)
GND → 12V 電池負極 (黑線)

⚠️  安全提醒：
- 邏輯電源(5V)和電機電源(12V)要分開！
- 所有 GND 必須連接在一起
- 電機電源建議加 5A 保險絲

📡 感測器連接 (可選)
==================

超聲波感測器 HC-SR04：
--------------------
前方感測器：
GPIO 23 (針腳16) → Trig
GPIO 24 (針腳18) → Echo
5V   (針腳2)     → VCC
GND  (針腳6)     → GND

後方感測器：
GPIO 25 (針腳22) → Trig  
GPIO 8  (針腳24) → Echo
5V   (針腳4)     → VCC
GND  (針腳14)    → GND

左方感測器：
GPIO 5  (針腳29) → Trig
GPIO 6  (針腳31) → Echo
3V3  (針腳17)    → VCC
GND  (針腳25)    → GND

右方感測器：
GPIO 19 (針腳35) → Trig
GPIO 26 (針腳37) → Echo  
3V3  (針腳1)     → VCC
GND  (針腳39)    → GND

陀螺儀 MPU6050 (I2C)：
--------------------
GPIO 2 (針腳3)  → SDA
GPIO 3 (針腳5)  → SCL
3V3    (針腳1)  → VCC
GND    (針腳9)  → GND

🔋 電源系統
===========

電源分配方案：
------------
12V 鋰電池 →
├── L298N 電機驅動 (12V IN)
└── LM2596 降壓模組 (12V IN) →
    └── 樹莓派 (5V 3A)

或者：
12V 電池 → L298N 電機驅動
專用 5V 電源 → 樹莓派 (更穩定)

💡 接線顏色建議：
===============
紅色 - 正電源 (5V, 12V)
黑色 - 接地 (GND)  
黃色 - 信號線 (GPIO)
藍色 - I2C 數據線
綠色 - SPI 數據線
橙色 - PWM 信號
"""
    
    return diagram

def generate_connection_checklist():
    """生成連接檢查清單"""
    
    checklist = """
🔍 接線檢查清單
==============

⚡ 電源連接檢查：
---------------
□ 樹莓派電源：5V 3A USB-C 或 GPIO 針腳供電
□ 電機電源：12V 電池連接到 L298N
□ 邏輯電源：5V 連接到 L298N VCC
□ 公共接地：所有 GND 連接在一起
□ 電壓測試：萬用電表確認各點電壓正確

🎮 電機控制連接：
---------------
□ GPIO 16 → L298N IN1 (右電機正轉)
□ GPIO 18 → L298N IN2 (右電機反轉)
□ GPIO 11 → L298N IN3 (左電機正轉)  
□ GPIO 13 → L298N IN4 (左電機反轉)
□ 電機正負極正確連接到 OUT1-OUT4
□ 接線牢固，無短路風險

📡 感測器連接 (如有)：
-------------------
□ I2C 設備：SDA/SCL 正確連接
□ 超聲波：Trig/Echo 針腳對應
□ 電源電壓：3.3V 或 5V 設備正確供電
□ 接地連接：所有感測器 GND 連接

🔒 安全檢查：
-----------
□ 無裸露金屬線
□ 接線端子擰緊
□ 電池電壓正確 (12V ±1V)
□ 保險絲已安裝 (建議 5A)
□ 散熱片已安裝到樹莓派
□ 急停開關可訪問 (建議)

⚙️ 軟件配置檢查：
---------------
□ SSH 連接正常
□ GPIO 權限正確
□ Python 環境已設置
□ 項目代碼已上傳
□ 防火牆端口已開放

🧪 功能測試順序：
---------------
1. □ 樹莓派開機測試
2. □ 網絡連接測試  
3. □ GPIO 基礎測試
4. □ 電機控制測試 (斷開電機線)
5. □ 感測器讀取測試
6. □ API 服務器測試
7. □ 前端連接測試
8. □ 完整功能測試

❌ 常見錯誤避免：
---------------
□ 避免：5V 和 3.3V 設備混用
□ 避免：電機電源直接連樹莓派
□ 避免：忘記公共接地線
□ 避免：GPIO 針腳接錯
□ 避免：電源極性接反
□ 避免：電流超過額定值
"""
    
    return checklist

def generate_troubleshooting_guide():
    """生成故障排除指南"""
    
    guide = """
🛠️ 硬件故障排除指南
==================

🔥 電源相關問題：
---------------
症狀：樹莓派無法開機 / 紅燈不亮
檢查：
1. 電源供應器是否為 5V 3A 以上
2. USB-C 接頭是否插好
3. 電源線是否損壞
4. 試用其他電源供應器

症狀：樹莓派頻繁重啟 / 彩虹方塊
檢查：
1. 電源功率不足，升級到 5V 3A
2. SD 卡問題，重新燒錄系統
3. 過熱保護，檢查散熱

⚡ 電機相關問題：
---------------
症狀：電機完全不轉
檢查：
1. 12V 電池是否有電（萬用電表測試）
2. L298N 電源指示燈是否亮起
3. GPIO 連接是否正確
4. 電機是否損壞（直接接電池測試）

症狀：電機轉向錯誤
解決：
1. 交換電機正負極線
2. 檢查 GPIO 針腳是否接錯
3. 修改軟件中的針腳定義

症狀：電機轉動無力
檢查：
1. 電池電壓是否足夠（應≥11V）
2. 電流是否足夠（檢查保險絲）
3. 電機是否過載（機械阻力）

📡 通訊相關問題：
---------------
症狀：SSH 連接失敗
檢查：
1. 樹莓派 IP 地址是否正確
2. SSH 服務是否啟用
3. 防火牆是否阻擋
4. 網絡是否連通（ping 測試）

症狀：GPIO 權限錯誤
解決：
1. sudo usermod -a -G gpio pi
2. 重新登入或重啟
3. 或使用 sudo 運行程序

症狀：I2C 設備無法讀取
檢查：
1. I2C 是否啟用：sudo raspi-config
2. 設備地址：sudo i2cdetect -y 1
3. 接線：SDA, SCL, VCC, GND
4. 上拉電阻（某些設備需要）

🌡️ 溫度相關問題：
---------------
症狀：系統過熱降頻
檢查：
1. CPU 溫度：vcgencmd measure_temp
2. 安裝散熱片和風扇
3. 改善機箱通風
4. 降低環境溫度

正常工作溫度：< 70°C
警告溫度：70-80°C  
降頻溫度：> 80°C

🔧 測試工具使用：
===============

萬用電表測試：
- 電池電壓：12V ±1V
- 樹莓派 5V 針腳：4.9-5.1V
- 樹莓派 3.3V 針腳：3.2-3.4V
- GPIO 高電平：3.3V
- GPIO 低電平：0V

示波器測試（進階）：
- PWM 信號波形
- I2C 時序
- SPI 通訊

邏輯分析儀（進階）：
- 數位信號分析
- 協議解碼
- 時序分析

💊 應急修復方案：
===============

無法 SSH 連接：
1. 直接連接鍵盤螢幕
2. 檢查網絡設置
3. 重設 SSH 服務

SD 卡損壞：
1. 備用 SD 卡更換
2. 重新燒錄系統
3. 恢復備份文件

電機驅動燒毀：
1. 更換 L298N 模組
2. 檢查原因（短路/過流）
3. 加強保護措施

樹莓派損壞：
1. 更換樹莓派主板
2. 轉移 SD 卡和配置
3. 檢查損壞原因

🚨 預防措施：
===========
□ 定期檢查接線緊固
□ 監控系統溫度
□ 定期備份系統
□ 使用保險絲保護
□ 避免熱插拔硬件
□ 正確關機程序
"""
    
    return guide

def main():
    """主程序"""
    print("🔌 機器人硬件接線指南生成器")
    print("=" * 50)
    
    while True:
        print("\n請選擇要查看的內容：")
        print("1. 接線圖")
        print("2. 檢查清單") 
        print("3. 故障排除")
        print("4. 全部顯示")
        print("5. 退出")
        
        choice = input("\n請輸入選項 (1-5): ").strip()
        
        if choice == '1':
            print(generate_wiring_diagram())
        elif choice == '2':
            print(generate_connection_checklist())
        elif choice == '3':
            print(generate_troubleshooting_guide())
        elif choice == '4':
            print(generate_wiring_diagram())
            print(generate_connection_checklist())
            print(generate_troubleshooting_guide())
        elif choice == '5':
            print("再見！")
            break
        else:
            print("無效選項，請重新選擇。")
        
        input("\n按 Enter 繼續...")

if __name__ == "__main__":
    main()
